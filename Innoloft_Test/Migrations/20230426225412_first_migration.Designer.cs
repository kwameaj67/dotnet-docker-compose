// <auto-generated />
using System;
using Innoloft_Test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Innoloft_Test.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230426225412_first_migration")]
    partial class first_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Innoloft_Test.Models.Event", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTimeOffset?>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("end_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("event_creator_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("event_type")
                        .HasColumnType("longtext");

                    b.Property<string>("location")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("start_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("id");

                    b.ToTable("events");
                });

            modelBuilder.Entity("Innoloft_Test.Models.EventCreator", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("event_creators");
                });

            modelBuilder.Entity("Innoloft_Test.Models.EventInvitation", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("event_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("participant_id")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.ToTable("event_invitation");
                });

            modelBuilder.Entity("Innoloft_Test.Models.EventParticipation", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("creator_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("event_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("participant_id")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.ToTable("event_participation");
                });

            modelBuilder.Entity("Innoloft_Test.Models.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
